library(devtools)
use_package('tidyverse')
use_package('ggplot2')
use_r('dataGEN')
devtools::load_all(".")
library(sunBcubed)
help(package='sunBcubed')
devtools::load_all(".")
help(package='sunBcubed')
library(sunBcubed)
help(package='sunBcubed')
example("dataGEN", package = 'sunBcubed')
use_vignette(`intro_denGen`, title='Introduction to using `denGEN()`')
devtools::load_all(".")
use_vignette(`intro_denGen`, title='Introduction to using `denGEN()`')
use_vignette('intro_denGen', title='Introduction to using `denGEN()`')
devtools::load_all(".")
help(package='sunBcubed')
library(sunBcubed)
help(package='sunBcubed')
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
help(package='sunBcubed')
devtools::load_all(".")
help(package='sunBcubed')
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
help(package='sunBcubed')
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
help(package='sunBcubed')
use_r('dissim')
use_r('invasib')
use_vignette('intro_dissim', title='Introduction to using `dissim()`')
use_vignette('intro_invasib', title='Introduction to using `invasib()`')
library(sunBcubed)
help(package='sunBcubed')
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
use_vignette('intro_sunBcubed', title='Introduction to the sunBcubed package')
help(package='sunBcubed')
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
help(package='sunBcubed')
library(tidyverse)
set.seed(123)
sunData=tibble(
id=c(1:100),
col1=sample(0:10,size=100,replace=TRUE),
col2=sample(0:50,size=100,replace=TRUE),
col3=sample(0:2,size=100,replace=TRUE),
col4=sample(0:10,size=100,replace=TRUE)
)
head(sunData)
use_data(sunData)
use_r('data')
library(sunBcubed)
rm('sunData')
help(package='sunBcubed')
data(sunData)
detach("package:sunBcubed", unload = TRUE)
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(devtools)
use_r('simData')
rep(paste0('species_',1:10),1)
paste0('species_',1:10)
c('species_',1:10)
?expand.grid
?ext
??ext
library(sunBcubed)
help(package='sunBcubed')
help(simData, package='sunBcubed')
example(simData, package='sunBcubed')
?tapply
library(sunBcubed)
help(simData, package='sunBcubed')
example(simData, package='sunBcubed')
(simulated_data = simData(returnOption = 1, plot = TRUE))
(simulated_data = simData(returnOption = 1, plot = TRUE))
(simulated_data = simData(returnOption = 2, plot = TRUE))
library(sunBcubed)
(simulated_data = simData(returnOption = 2, plot = TRUE))
(simulated_data = simData(returnOption = 1, plot = TRUE))
(simulated_data = simData(returnOption = 3, plot = TRUE))
?distance
?dissim
?dist
devtools::load_all(".")
(simulated_data = simData(returnOption = 3, plot = TRUE))
(simulated_data = simData(returnOption = 1, plot = TRUE))
devtools::load_all(".")
(simulated_data = simData(returnOption = 1, plot = TRUE))
devtools::load_all(".")
(simulated_data = simData(returnOption = 1, plot = TRUE))
devtools::load_all(".")
(simulated_data = simData(returnOption = 1, plot = TRUE))
devtools::load_all(".")
(simulated_data = simData(returnOption = 1, plot = TRUE))
devtools::load_all(".")
(simulated_data = simData(returnOption = 1, plot = TRUE))
devtools::load_all(".")
(simulated_data = simData(returnOption = 1, plot = TRUE))
example(simData, package='sunBcubed')
library(sunBcubed)
example(simData, package='sunBcubed')
devtools::load_all(".")
example(simData, package='sunBcubed')
devtools::load_all(".")
example(simData, package='sunBcubed')
library(sunBcubed)
example(simData, package='sunBcubed')
use_vignette('02_intro_simData', title='Introduction to using `simData()`')
use_vignette('intro_simData', title='Introduction to using `simData()`')
library(sunBcubed)
devtools::load_all(".")
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
help(package='sunBcubed')
library(sunBcubed)
devtools::load_all(".")
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
load("D:/Methods/R/myR_Packages/sunBcubed/data/sunData.rda")
View(sunData)
devtools::load_all(".")
library(sunBcubed)
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
devtools::load_all(".")
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(sunBcubed)
detach("package:sunBcubed", unload = TRUE)
install.packages("D:/Methods/R/myR_Packages/sunBcubed_0.0.1.tar.gz", repos = NULL, type = "source")
library(sunBcubed)
help(package='sunBcubed')
library(pkgdown)
library(pkgbuild)
library(pkgconfig)
library(pkgload)
renv::activate()
update.packages('htmltools')
install.packages("htmltools")
dataGEN
library(sunBcubed)
devtools::load_all(".")
